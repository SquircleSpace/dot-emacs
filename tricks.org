#+TITLE: Tricks

It is easy to forget magic tricks.

* Programming
** Navigation
*** Tags
Info: http://www.gnu.org/software/emacs/manual/html_node/emacs/Tags.html

Tags helps you jump right to functions and such

*** ECB
Info: http://ecb.sourceforge.net/

Makes Emacs look like an IDE.
*** Minimap
Info: http://www.emacswiki.org/emacs/MiniMap

Copies Sublime Text's scroll-bar thing.
** Reading
*** Glasses Mode
Info: http://www.gnu.org/software/emacs/manual/html_node/emacs/Glasses.html

Glasses mode turns =camelCase= into =camel_Case= but ONLY in emacs -- the file still contains =camelCase=.

** Writing
*** Auto Complete
Info: http://emacswiki.org/emacs/AutoComplete

Auto Complete is a fairly robust completion engine with support for various backends. By default, it includes words from buffers with the same format, but you can do more sophisticated things. For example, ask a compiler for suggestions.

If you use Auto Complete and Fly Spell, make sure you =(ac-flyspell-workaround)=.

*** Fly Spell
Info: http://www.emacswiki.org/emacs/FlySpell

=fly-spell-prog-mode= checks spelling of comments and strings.

** Version Control
*** Magit
Info: http://philjackson.github.io/magit/magit.html

Magit is a visual interface to git. It is very magic.

*** Ediff
Info: http://www.gnu.org/software/emacs/manual/html_mono/ediff.html

Ediff is a mode/program for generating and viewing diffs. It is easier to use/read than a raw diff. It is also very powerful and has great features like modifying the diff and diffing word-by-word.
** Debugging
*** gdb
Info: http://www.gnu.org/software/emacs/manual/html_node/emacs/GDB-Graphical-Interface.html

=M-x gdb= followed by =M-x gdb-many-windows= leads to magic debugging with gdb.
*** Flymake
Info: http://flymake.sourceforge.net/

Like a spellchecker but for programs.
** Other
*** CEDET
Info: http://cedet.sourceforge.net/

CEDET is a Collection of Emacs Development Environment Tools. If ECB makes Emacs look like an IDE, then CEDET turns Emacs into an IDE.
* Global
** UI
*** Simplicity
For a simpler UI:
#+BEGIN_SRC emacs-lisp
  (when window-system
    (fringe-mode 0)
    (scroll-bar-mode -1)
    (tool-bar-mode -1))
  (menu-bar-mode -1)
#+END_SRC
Some of these might be best done with customize, since they only apply to the current window.

To make for a cleaner start screen
#+BEGIN_SRC emacs-lisp
  (when window-system
    (setq inhibit-startup-screen t)
    (setq initial-buffer-choice nil))
#+END_SRC

*** Power
- =(setq column-number-mode t)= will put the column in the mode line.
- =linum-mode= and =global-linum-mode= show line numbers in the margin

** Other
*** Ido
Info: http://emacswiki.org/emacs/InteractivelyDoThings

Ido makes switching buffers, finding files, etc. really easy. Fuzzy matching is great.

*** Icicles
Info: http://emacswiki.org/emacs/Icicles

Like Ido, but better?
*** Tweaks
Emacs is old and different. Here are some changes to make it feel more modern.

- =(set-default 'cursor-type 'bar)= for a familiar, bar-style cursor.
- =(pending-delete-mode 1)= makes it so backspace/delete remove selected region, and =(delete-selection-mode 1)= makes it so typing with a selection overwrites the selected text.
- =(setq scroll-conservatively 10000)= makes scrolling a little less jumpy.
- =(setq ring-bell-function (lambda () (progn)))= shut the bell up.
- Make right clicking a misspelled word do what you would think (bring up suggestions)
  #+BEGIN_SRC emacs-lisp
    (eval-after-load "flyspell"
      '(define-key flyspell-mode-map [down-mouse-3] 'flyspell-correct-word))
  #+END_SRC
- =(setq tramp-default-method "ssh")= to make Tramp use SSH by default (faster than scp)

*** Mouse
In terminal emacs, mouse support is off by default. This enables it and adds nice scrolling.
#+BEGIN_SRC emacs-lisp
  (unless window-system
    ;; Enable mouse support
    (require 'mouse)
    (xterm-mouse-mode t)
    (defun track-mouse (e))
    (setq mouse-sel-mode t)
  
    ;; Mouse scrolling
    (defun smooth-scroll (number-lines increment)
      (if (= 0 number-lines)
          t
        (progn
          (sit-for 0.02)
          (scroll-up increment)
          (smooth-scroll (- number-lines 1) increment))))
  
    (global-set-key [(mouse-5)] '(lambda () (interactive) (smooth-scroll 3 1)))
    (global-set-key [(mouse-4)] '(lambda () (interactive) (smooth-scroll 3 -1)))
    )
#+END_SRC
* Great Modes
** Major Modes
*** Org Mode
Info: http://orgmode.org/

All purpose mode for note taking, structured document authoring, planning, todos, etc.

*** Artist Mode
Info: http://www.emacswiki.org/emacs/ArtistMode

Draw stuff! Woo ascii art!

*** Hexl Mode
Info: http://www.emacswiki.org/emacs/HexlMode

Make Emacs into a hex editor.

** Minor Modes
*** WhiteSpace Mode
Info: http://emacswiki.org/emacs/WhiteSpace

Visualize white space and white space errors.

*** Auto Fill Mode
Break long lines automatically.

*** Visual Line Mode
Wrap long lines.
